<style>
	.body {
	  padding: 0;
	  margin: 0;
	}

	.wrapper {
	  display: flex;
	  flex-direction: column;
	  height: 100vh;
	}

	.header {
	  position:relative;
	  flex: 0 0 auto;
	}

	.content {
	  overflow-y:scroll;
	  flex: 0 1 auto;
	}
</style>

<form class="form-horizontal">
<div class="wrapper">
	<div class="header">
		<h4>MQTT Chamber Temperature</h4>
		<hr>
	</div>
	<div class="content">
		<h5><b>Temperature Monitoring</b></h5>

		<label class="control-label">Subscribed Topic</label>
		<div class="controls">
				<input type="text" class="input-mini" style="width: 500px" data-bind="value: settings.plugins.mqttchambertemperature.mqttTempTopic, event: { focus: function(d, e) {$root.handleFocus(e, 'target', $data)} }">
		</div>

		<br/>

		<div class="controls">
			<label class="checkbox">
				<input type="checkbox" data-bind="checked: settings.plugins.mqttchambertemperature.convertFromFahrenheit"> Convert from Fahrenheit
			</label>
		</div>	

		<br/>

		<h5><b>Parsing</b></h5>

		<div class="controls">
			<label class="checkbox">
				<input type="checkbox" data-bind="checked: settings.plugins.mqttchambertemperature.parseJson"> Parse from JSON
			</label>
		</div>	

<!-- ko if: settings.plugins.mqttchambertemperature.parseJson -->

		<br/>

		<label class="control-label">JSONPATH</label>
		<div class="controls">
			<input type="text" class="input-mini" style="width: 500px" data-bind="value: settings.plugins.mqttchambertemperature.jsonPath, event: { focus: function(d, e) {$root.handleFocus(e, 'target', $data)} }">
		</div>
		
<!-- /ko -->

		<h5><b>Temperature Control</b></h5>

		<div class="controls">
			<label class="checkbox">
				<input type="checkbox" data-bind="checked: settings.plugins.mqttchambertemperature.controlHeater"> Control Temperature
			</label>
		</div>	
<!-- ko if: settings.plugins.mqttchambertemperature.controlHeater -->

		<br/>

		<label class="control-label">Current State Topic</label>
		<div class="controls">
			<input type="text" class="input-mini" style="width: 500px" data-bind="value: settings.plugins.mqttchambertemperature.mqttStateTopic, event: { focus: function(d, e) {$root.handleFocus(e, 'target', $data)} }">
		</div>

		<br/>

		<label class="control-label">Requested State Topic</label>
		<div class="controls">
			<input type="text" class="input-mini" style="width: 500px" data-bind="value: settings.plugins.mqttchambertemperature.mqttRequestedStateTopic, event: { focus: function(d, e) {$root.handleFocus(e, 'target', $data)} }">
		</div>

		<br/>

		<label class="control-label">State ON Value</label>
		<div class="controls">
			<input type="text" class="input-mini" style="width: 70px" data-bind="value: settings.plugins.mqttchambertemperature.stateOnValue, event: { focus: function(d, e) {$root.handleFocus(e, 'target', $data)} }">
		</div>

		<br/>

		<label class="control-label">State OFF Value</label>
		<div class="controls">
			<input type="text" class="input-mini" style="width: 70px" data-bind="value: settings.plugins.mqttchambertemperature.stateOffValue, event: { focus: function(d, e) {$root.handleFocus(e, 'target', $data)} }">
		</div>

		<br/>

		<div class="controls">
			<label class="checkbox">
				<input type="checkbox" data-bind="checked: settings.plugins.mqttchambertemperature.oneShotHeating"> One Shot Heating (sets Target to 0&deg; after target is reached)
			</label>
		</div>		
	<!-- ko ifnot: settings.plugins.mqttchambertemperature.oneShotHeating -->

		<br/>

		<label class="control-label">Temperature Hysteresis</label>
		<div class="controls">
			<input type="text" class="input-mini" style="width: 50px" data-bind="numeric, value: settings.plugins.mqttchambertemperature.heaterHysteresis, event: { focus: function(d, e) {$root.handleFocus(e, 'target', $data)} }"> &deg;
		</div>
	<!-- /ko -->
<!-- /ko -->
	</div>
</div>
</form>
